% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FitMDCEV.R
\name{FitMDCEV}
\alias{FitMDCEV}
\title{FitMDCEV}
\usage{
FitMDCEV(data, psi_formula = NULL, lc_formula = NULL, weights = NULL,
  model = c("alpha", "gamma", "hybrid", "hybrid0"), n_classes = 1,
  fixed_scale = 0, trunc_data = 0, seed = "123",
  max_iterations = 2000, initial.parameters = NULL,
  algorithm = c("MLE", "Bayes"), flat_priors = NULL,
  print_iterations = TRUE, hessian = TRUE, prior_psi_sd = 10,
  prior_gamma_sd = 10, prior_alpha_sd = 0.5, prior_scale_sd = 1,
  prior_delta_sd = 10, std_errors = "mvn", n_draws = 50,
  keep_loglik = 0, random_parameters = "fixed",
  show_stan_warnings = TRUE, n_iterations = 200, n_chains = 4,
  n_cores = 4, max_tree_depth = 10, adapt_delta = 0.8,
  lkj_shape_prior = 4)
}
\arguments{
\item{data}{The (IxJ) data to be passed to Stan including 1) id, 2) good, 3) quant,
4) price, 5) income, and columns for psi variables. Arrange data by id then good.
Notes I is number of individuals and J is number of non-numeraire goods.}

\item{psi_formula}{Formula for psi}

\item{lc_formula}{Formula for latent class}

\item{weights}{An optional vector of sampling or frequency weights.}

\item{model}{A string indicating which model specification is estimated.
The options are "alpha", "gamma", "hybrid" and "hybrid0".}

\item{n_classes}{The number of latent classes.}

\item{fixed_scale}{Whether to fix scale at 1.}

\item{trunc_data}{Whether the estimation should be adjusted for truncation}

\item{seed}{Random seed.}

\item{max_iterations}{Maximum number of iterations in MLE estimation.}

\item{initial.parameters}{Specify initial parameters intead of starting at random.
Initial parameter values should be included in a named list. For the "hybrid" specification,
initial parameters can be specified as:
init = list(psi = array(0, dim = c(1, num_psi)),
            gamma = array(1, dim = c(1, num_goods)),
            alpha = array(0.5, dim = c(1, 0)),
            scale = array(1, dim = c(1)))
where num_psi is number of psi parameters and num_goods is number of non-numeraire goods}

\item{algorithm}{Either "Bayes" for Bayes or "MLE"
for maximum liklihood estimation.}

\item{flat_priors}{indicator if completely uninformative priors should be specified. If using MLE, the
optimizing function will then be equal to log-likelihood. Defaults to 1 if MLE used and 0 if Bayes used.}

\item{print_iterations}{Whether to print iteration information}

\item{hessian}{Wheter to keep the Hessian matrix}

\item{prior_psi_sd}{standard deviation for normal prior with mean 0.}

\item{prior_gamma_sd}{standard deviation for normal prior with mean 0.}

\item{prior_alpha_sd}{standard deviation for normal prior with mean 0.5.}

\item{prior_scale_sd}{standard deviation for normal prior with mean 1.}

\item{prior_delta_sd}{standard deviation for normal prior with mean 0.}

\item{std_errors}{Compute standard errors using the delta method ("deltamethod")
or multivariate normal draws ("mvn"). The default is "mvn" as only mvn parameter draws are required
for demand and welfare simulation.}

\item{n_draws}{The number of MVN draws for standard error calculations}

\item{keep_loglik}{Whether to keep the log_lik calculations}

\item{random_parameters}{The form of the covariance matrix for
Bayes. Can be 'fixed', 'uncorr, 'corr'.}

\item{show_stan_warnings}{Whether to show warnings from Stan.}

\item{n_iterations}{The number of iterations in Bayesian estimation.}

\item{n_chains}{The number of chains in Bayesian estimation.}

\item{n_cores}{The number of cores to use in Bayesian estimation.
Can set using options(mc.cores = parallel::detectCores()).}

\item{max_tree_depth}{http://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded}

\item{adapt_delta}{http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup}

\item{lkj_shape_prior}{Prior for Cholesky matrix}

\item{...}{Additional parameters to pass on to \code{rstan::stan}
and \code{rstan::sampling}.}
}
\value{
A stanfit object
}
\description{
Fit a MDCEV model using MLE or Bayes
}
